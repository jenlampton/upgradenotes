<?php
/**
 * @file
 * Update functions.
 */

function acrupdate_update_last_removed() {
  return 7002;
}

/**
 * Implements hook_update_N: Updates all embedded image captions to use data
 * attributes.
 */
function acrupdate_update_1001(&$sandbox) {
  module_enable(array('acr_titles', 'webform_draggable_list'));
  if (!isset($sandbox['progress'])) {
    // Initialize batch update information.
    $sandbox['progress'] = 0;
    $sandbox['last_processed'] = 1;
    // Get the count by counting values in the field table.
    $sandbox['max'] = db_query("SELECT COUNT(body_value) FROM {field_data_body}")->fetchField();
  }

  // Update all body content to use Standard text format instead of PHP.
  db_query("UPDATE {field_data_body} SET body_format = '1' WHERE body_format = '5'");

  // Get all the values from the body table.
  $limit = 100;
  $result = db_query_range("SELECT body_value, body_summary, entity_id, revision_id, delta FROM {field_data_body} WHERE entity_id > :nid ORDER BY entity_id", 0, $limit, array(':nid' => $sandbox['last_processed']));

  foreach ($result as $record) {

    // Search for embedded images.
    if (strstr($record->body_value, '<img')) {
      $body_updated = $record->body_value;

      // Parse the body for image tags.
      $dom = new DOMDocument('1.0', 'UTF-8');
      @$dom->loadHTML('<?xml version="1.0" encoding="UTF-8"?>' . $record->body_value);

      $tags = $dom->getElementsByTagName('img');
      foreach ($tags as $image) {

        // Update images.
        $title = $image->getAttribute('title');
        if (!empty($title)) {
          $image->setAttribute('data-caption', $title);
        }

        $style = str_replace(' ', '', $image->getAttribute('style'));
        if (!empty($style) && strstr($style, 'float:right')) {
          $image->setAttribute('data-align', 'right');
          $image->removeAttribute('style');
        }
        elseif (!empty($style) && strstr($style, 'float:left')) {
          $image->setAttribute('data-align', 'left');
          $image->removeAttribute('style');
        }
      }

      // Export HTML for the body.
      $body_updated = '';
      $body = $dom->getElementsByTagName('body')->item(0);
      foreach ($body->childNodes as $child) {
        $body_updated .= $dom->saveHTML($child);
      }

      if ($body_updated != $record->body_value) {
        // Update database.
        db_query("UPDATE {field_data_body} SET body_value = :new, body_format = '1' WHERE entity_id = :eid AND revision_id = :rid AND delta = :delta",
          array(
            ':new' => $body_updated,
            'eid' => $record->entity_id,
            ':rid' => $record->revision_id,
            ':delta' => $record->delta
          ));
      }
    }

    // Update our progress information for the batch update.
    $sandbox['progress']++;
    $sandbox['last_processed'] = $record->entity_id;
  }

  // Indicate our current progress to the batch update system. If there's no
  // max value then there's nothing to update and we're finished.
  $sandbox['#finished'] = $sandbox['progress'] / $sandbox['max'];

  if ($sandbox['#finished'] >= 1) {
    $ret = t("Image captions updated to data attributes.");
    return $ret;
  }
}

/**
 * Implements hook_update_N: Updates text formats to Basic.
 */
function acrupdate_update_1002() {
  // Update all body content to use Basic text format instead of PHP or WYSIWYG.
  db_query("UPDATE {field_data_body} SET body_format = '1' WHERE body_format = '5'");
  db_query("UPDATE {field_data_body} SET body_format = '1' WHERE body_format = '3'");
  // Update all ad text to use Basic
  db_query("UPDATE {field_data_field_ad_text} SET field_ad_text_format = '1'");
}

/**
 * Implements hook_update_N: Updates all webforms to be accesssable to everyone.

function acrupdate_update_1003() {
  if (!isset($sandbox['progress'])) {
    // Initialize batch update information.
    $sandbox['progress'] = 0;
    $sandbox['last_processed'] = 1;
    // Get the count by counting values in the field table.
    //$sandbox['max'] = db_query("SELECT COUNT(nid) FROM {node} WHERE type = 'webform'")->fetchField();
    $sandbox['max'] = 1;
  }

  // Get all the values from the body table.
  //$limit = 100;
  $limit = 1;
  $result = db_query_range("SELECT nid FROM {node} WHERE type = 'webform' AND nid > :nid ORDER BY nid", 0, $limit, array(':nid' => $sandbox['last_processed']));

  foreach ($result as $record) {
    $node = node_load($record->nid);
    dpm($node->webform);
    $node->save();

    // Update our progress information for the batch update.
    $sandbox['progress']++;
    $sandbox['last_processed'] = $record->nid;
  }

  // Indicate our current progress to the batch update system. If there's no
  // max value then there's nothing to update and we're finished.
  $sandbox['#finished'] = $sandbox['progress'] / $sandbox['max'];

  if ($sandbox['#finished'] >= 1) {
    $ret = t("Webforms updated.");
    return $ret;
  }
}
*/
